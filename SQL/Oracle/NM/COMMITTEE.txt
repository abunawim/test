CREATE TABLE NM_COMMITTEE_TYPE
(
  COMMITTEE_TYPE_ID  VARCHAR2(16 BYTE),
  COMMITTEE_TYPE_NAME            VARCHAR2(100 BYTE),
  ACTIVE_FLAG       VARCHAR2(1 BYTE),
  ENTERED_BY        VARCHAR2(16 BYTE),
  ENTRY_TIMESTAMP   DATE,
  UPDATED_BY        VARCHAR2(16 BYTE),
  UPDATE_TIMESTAMP  DATE,
  COMPANY_NO        VARCHAR2(10 BYTE)           DEFAULT 1
);


CREATE OR REPLACE TRIGGER TRG_NM_COMMITTEE_TYPE
   BEFORE INSERT ON NM_COMMITTEE_TYPE  REFERENCING NEW AS NEW OLD AS OLD
   FOR EACH ROW
DECLARE
   V_COMMITTEE_TYPE_ID   NM_COMMITTEE_TYPE.COMMITTEE_TYPE_ID%TYPE;
BEGIN
   PRC_BUILD_PK ('', 'SEQ_NM_COMMITTEE_TYPE', 'T', NVL(:NEW.COMPANY_NO,'1'), V_COMMITTEE_TYPE_ID,'Y');
   :NEW.COMMITTEE_TYPE_ID := V_COMMITTEE_TYPE_ID;
EXCEPTION
   WHEN OTHERS THEN NULL;
END;
/


ALTER TABLE NM_COMMITTEE_TYPE ADD (
  CONSTRAINT PK_NM_COMMITTEE_TYPE
  PRIMARY KEY  (COMMITTEE_TYPE_ID));

--=====================================================================================


CREATE TABLE NM_COMMITTEE
(
  COMMITTEE_ID      VARCHAR2(16 BYTE),
  COMMITTEE_TYPE_ID  VARCHAR2(16 BYTE),
  EMP_NO            VARCHAR2(16 BYTE),
  SESSION_ID        VARCHAR2(16 BYTE),
  REMARKS           VARCHAR2(500 BYTE),
  ACTIVE_FLAG       VARCHAR2(1 BYTE),
  ENTERED_BY        VARCHAR2(16 BYTE),
  ENTRY_TIMESTAMP   DATE,
  UPDATED_BY        VARCHAR2(16 BYTE),
  UPDATE_TIMESTAMP  DATE,
  COMPANY_NO        VARCHAR2(10 BYTE)           DEFAULT 1
);


CREATE OR REPLACE TRIGGER TRG_NM_COMMITTEE
   BEFORE INSERT ON NM_COMMITTEE  REFERENCING NEW AS NEW OLD AS OLD
   FOR EACH ROW
DECLARE
   V_COMMITTEE_ID   NM_COMMITTEE.COMMITTEE_ID%TYPE;
BEGIN
   PRC_BUILD_PK ('', 'SEQ_NM_COMMITTEE', 'C', NVL(:NEW.COMPANY_NO,'1'), V_COMMITTEE_ID,'Y');
   :NEW.COMMITTEE_ID := V_COMMITTEE_ID;
EXCEPTION
   WHEN OTHERS
   THEN
      NULL;
END;
/


ALTER TABLE NM_COMMITTEE ADD (
  CONSTRAINT PK_NM_COMMITTEE
  PRIMARY KEY  (COMMITTEE_ID, COMMITTEE_TYPE_ID, EMP_NO));



--=====================================================================================


CREATE TABLE NM_QUOTA
(
  QUOTA_ID  VARCHAR2(16 BYTE),
  QUOTA_NAME            VARCHAR2(100 BYTE),
  ACTIVE_FLAG       VARCHAR2(1 BYTE),
  ENTERED_BY        VARCHAR2(16 BYTE),
  ENTRY_TIMESTAMP   DATE,
  UPDATED_BY        VARCHAR2(16 BYTE),
  UPDATE_TIMESTAMP  DATE,
  COMPANY_NO        VARCHAR2(10 BYTE)           DEFAULT 1
);


CREATE OR REPLACE TRIGGER TRG_NM_QUOTA
   BEFORE INSERT ON NM_QUOTA  REFERENCING NEW AS NEW OLD AS OLD
   FOR EACH ROW
DECLARE
   V_QUOTA_ID   NM_QUOTA.QUOTA_ID%TYPE;
BEGIN
   PRC_BUILD_PK ('', 'SEQ_NM_QUOTA', 'Q', NVL(:NEW.COMPANY_NO,'1'), V_COMMITTEE_TYPE_ID,'Y');
   :NEW.COMMITTEE_TYPE_ID := V_COMMITTEE_TYPE_ID;
EXCEPTION
   WHEN OTHERS THEN NULL;
END;
/


ALTER TABLE NM_QUOTA ADD (
  CONSTRAINT PK_NM_QUOTA
  PRIMARY KEY  (QUOTA_ID));


--=====================================================================================


 
CREATE TABLE NM_MERITLIST

(

  MERITLIST_ID           VARCHAR2(16 BYTE),

  APPLICATION_ID         VARCHAR2(16 BYTE),

  MERIT_TYPE         VARCHAR2(20 BYTE),

  MERIT_POINT       NUMBER,

  SESSION_ID        VARCHAR2(16 BYTE),

  REMARKS             VARCHAR2(500 BYTE),

  ACTIVE_FLAG         VARCHAR2(1 BYTE),

  ENTERED_BY          VARCHAR2(16 BYTE),

  ENTRY_TIMESTAMP     DATE,

  UPDATED_BY          VARCHAR2(16 BYTE),

  UPDATE_TIMESTAMP    DATE,

  COMPANY_NO          VARCHAR2(10 BYTE)         DEFAULT 1

);

/
 

ALTER TABLE NM_MERITLIST ADD (

  CONSTRAINT PK_NM_MERITLIST

  PRIMARY KEY  (MERITLIST_ID));

/


TRIGGER TRG_NM_MERITLIST

   BEFORE INSERT ON NM_MERITLIST  REFERENCING NEW AS NEW OLD AS OLD

   FOR EACH ROW

DECLARE

   V_MERITLIST_ID   NM_MERITLIST.MERITLIST_ID%TYPE;

BEGIN

   PRC_BUILD_PK ('', 'SEQ_NM_MERITLIST', 'M', NVL(:NEW.COMPANY_NO,'1'), V_MERITLIST_ID,'Y');

   :NEW.MERITLIST_ID := V_MERITLIST_ID;

EXCEPTION

   WHEN OTHERS

   THEN

      NULL;

END;


--=====================================================================================







