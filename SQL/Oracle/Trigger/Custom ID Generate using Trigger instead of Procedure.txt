//V.01

CREATE SEQUENCE SEQ_UMS_LAB_SCHEDULE
START WITH 1
MAXVALUE 999999999999999999999999999
MINVALUE 1
NOCYCLE
CACHE 20
NOORDER;
/

CREATE OR REPLACE TRIGGER TRG_UMS_LAB_SCHEDULE
BEFORE INSERT ON UMS_LAB_SCHEDULE FOR EACH ROW
WHEN (
NEW.SDL_ID IS NULL
)
BEGIN
SELECT SEQ_UMS_LAB_SCHEDULE.NEXTVAL INTO :NEW.SDL_ID FROM DUAL;
END;
/


//v.02

CREATE OR REPLACE TRIGGER TRG_NM_APPLICATION
   BEFORE INSERT ON NM_APPLICATION
   REFERENCING NEW AS NEW OLD AS OLD
   FOR EACH ROW
DECLARE
   LOC_VAR NM_APPLICATION.APPLICATION_ID%TYPE;
BEGIN
   PRC_BUILD_PK ('', 'SEQ_NM_APPLICATION', 'R', NVL(:NEW.COMPANY_NO,'1'), LOC_VAR,'Y');
   :NEW.APPLICATION_ID := LOC_VAR;
EXCEPTION
   WHEN OTHERS
   THEN
      NULL;
END;
/


//v.03

CREATE OR REPLACE TRIGGER TRG_NM_APPLICATION
   BEFORE INSERT ON NM_APPLICATION
   REFERENCING NEW AS NEW OLD AS OLD
   FOR EACH ROW
DECLARE
   V_APPLICATION_ID NM_APPLICATION.APPLICATION_ID%TYPE;
BEGIN
   PRC_BUILD_PK ('', 'SEQ_NM_APPLICATION', 'R', NVL(:NEW.COMPANY_NO,'1'), V_APPLICATION_ID,'Y');
   if :NEW.APPLICATION_ID is null then 
   :NEW.APPLICATION_ID := V_APPLICATION_ID;
   end if;
EXCEPTION
   WHEN OTHERS
   THEN
      NULL;
END;
/



//v.04

















