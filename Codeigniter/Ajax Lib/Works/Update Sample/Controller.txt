//Materials Update by ID
    public function course_materials_edit($id='')
    {
       if(!empty($_POST['id']))
        {
            $data['CM_ID']=$CM_ID=$_POST['id'];
        }
        else
            $data['CM_ID']=$CM_ID=$id;

        $data['course_materials_edit_details'] = $this->utilities->findByAttribute('UMS_COURSE_MATERIALS', array("CM_ID" => $CM_ID));

        $data['contentTitle'] = 'Materials';
        $data['breadcrumbs'] = array(
            'Create Materials' => '#'
        );
        $data['content_view_page'] = 'admin/assignment/createMaterials_edit';
        $data['dimention'] = "horizental";

        $data['allCourseMaterialsWithDetails'] = $this->student_model->allCourseMaterialsWithDetails();

        $data['ACA_COURSE'] = $this->utilities->findAllByAttribute('ACA_COURSE', array("ACTIVE_STATUS" => '1'));
        $data['UM_LAB_EXPERIMENT'] = $this->utilities->findAllByAttribute('UM_LAB_EXPERIMENT', array("ACTIVE_STATUS" => 'Y'));
        $data['INS_FACULTY'] = $this->utilities->findAllByAttribute('INS_FACULTY', array("ACTIVE_STATUS" => '1'));
        $data['ADM_YSESSION'] = $this->utilities->findByLeftJoinT2("ADM_YSESSION", "INS_SESSION", "SESSION_ID", "SESSION_ID", '');
        $data['INS_DEGREE'] = $this->utilities->findAllByAttribute('INS_DEGREE', array("ACTIVE_STATUS" => '1'));
        $data['INS_DEPT'] = $this->utilities->findAllByAttribute('INS_DEPT', array("ACTIVE_STATUS" => '1'));
        $data['INS_PROGRAM'] = $this->utilities->findAllByAttribute('INS_PROGRAM', array("ACTIVE_STATUS" => '1'));
        $data['ACA_BATCH'] = $this->utilities->findAllByAttribute('ACA_BATCH', array("ACTIVE_STATUS" => '1'));
        $data['ACA_SECTION'] = $this->utilities->findAllByAttribute('ACA_SECTION', array("ACTIVE_STATUS" => '1'));
        $data['SA_ROOM'] = $this->utilities->findAllByAttribute('SA_ROOM', array("ACTIVE_STATUS" => '1'));
        $data['M00_LKPDATA'] = $this->utilities->findAllByAttribute('M00_LKPDATA', array("ACT_FG" => '1', "GRP_ID" => '103'));

        $this->form_validation->set_rules('CM_TITLE', 'Metirial title', 'required');
        $this->form_validation->set_rules('DEPT_ID', 'Dept', 'required');
        $this->form_validation->set_rules('YSESSION_ID', 'Session', 'required');
        $this->form_validation->set_rules('SECTION_ID', 'Section', 'required');
        $this->form_validation->set_rules('PROGRAM_ID', 'Program', 'required');
        $this->form_validation->set_rules('BATCH_ID', 'Batch', 'required');
        $this->form_validation->set_rules('COURSE_ID', 'Course', 'required');
        $this->form_validation->set_rules('LKP_ID', 'Category', 'required');

        if ($this->form_validation->run() == FALSE)
        {
            $this->admin_template->display($data);
        }
        else
        {
            $this->db->trans_begin();
            $assi_data['SESSION_ID'] = $this->input->post('YSESSION_ID');
            $assi_data['CATEGORY'] = $this->input->post('LKP_ID');
            $assi_data['UPD_BY'] = $this->user['EMP_ID'];
            $assi_data['UPD_DT'] = date("Y-m-d G:i:s");

            unset($_POST['YSESSION_ID']);
            unset($_POST['LKP_ID']);
            unset($_POST['id']);

            //Start file upload
            $MATERIAL_FILE_PATH = '';
            $upload_path = 'upload/assignments/materials/';
            if(!empty($_FILES['ATTACHMENT']['name']))
            {
                $file_ext = pathinfo($_FILES['ATTACHMENT']['name'],PATHINFO_EXTENSION);
                $config['upload_path'] = $upload_path;
                $config['allowed_types'] = 'jpg|jpeg|doc|docx|pdf';
                $config['file_name'] = date('Y-m-d-H-i-s').'.'.$file_ext;

                //initialize configuration
                $this->upload->initialize($config);

                if($this->upload->do_upload('ATTACHMENT')){
                    $finfo = $this->upload->data(); //upload the file to the above mentioned path
                    $MATERIAL_FILE_PATH = $finfo['file_name'];
                }
            }
            //End file upload


            if($MATERIAL_FILE_PATH)
                $assi_data['ATTACHMENT']=$MATERIAL_FILE_PATH;

            $assi_data = array_merge($_POST, $assi_data);

            //For save unlink file data before update
            $result1 = $this->utilities->findByAttribute('UMS_COURSE_MATERIALS', array('CM_ID'=>$CM_ID));

            $res = $this->utilities->updateData('UMS_COURSE_MATERIALS',$assi_data, array('CM_ID'=>$CM_ID));

            if($res and $MATERIAL_FILE_PATH)
            {
                if(file_exists($upload_path.$result1->ATTACHMENT))
                {
                    unlink($upload_path.$result1->ATTACHMENT);
                }
            }


            if ($this->db->trans_status() === FALSE)
            {
                $this->db->trans_rollback();
                //$this->session->set_flashdata('Error', 'Error! Record not updated successfully.');
                echo 'no';
            }
            else
            {
                $this->db->trans_commit();
                //$this->session->set_flashdata('Success', 'Success! Record updated successfully.');
                echo 'yes';
            }

            //redirect('assignment/createAssignment');
        }
    }
